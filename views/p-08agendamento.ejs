<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agende Sua Consulta | PetClinic</title>
    <link rel="stylesheet" href="../style/main.css">
    <link rel="stylesheet" href="../style/style08.css">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="icon" href="../img/PatClinic.png">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    
</head>
<body>
    <header>
        <nav>
            <div class="logo-header">
                <a href="/"><img src="../img/PatClinic.png" alt="Logo da Pata Clinic"></a>
            </div>

            <div class="header-info">
                <ul>
                    <li><a href="/">Início</a></li>
                    <li><a href="/perfil">Animais Cadastrados</a></li>
                    <li><a href="#contato">Contato</a></li>
                    <li><a href="#duvidas">Dúvidas</a></li>
                </ul>
            </div>

            <div class="header-login">
                <a href="/perfil"> 
                    <span class="perfil-padrao"><i class='bx bxs-user'></i></span>
                     <span class="perfil-ho">
                        <i class='bx bxs-user-circle'></i>
                    </span> Perfil 
                </a>

                <a href="/cadastrarAnimal">Cadastrar Animal🐈</a>
            </div>

        </nav>

    </header>

    <main>
        <div class="main-container">
            <div class="container-photo"></div>
            <h2>Agende sua consulta!</h2>
            <p><i class='bx bx-map'></i> Rua Dom Pedro II, 1940 - São Paulo, SP</p>
            
            <div id="alertSuccess" class="alert alert-success" role="alert"></div>
            <div id="alertError" class="alert alert-danger" role="alert"></div>

            <form id="formAgendamento" class="container inputs">
                <div class="mb-3">
                    <label for="especialidade" class="form-label">Selecione uma Especialidade</label>
                    <select class="form-select" id="especialidade" required>
                        <option value="">Escolher Especialidade</option>
                        <option value="Castração">Castração</option>
                        <option value="Vacinação">Vacinação</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label for="selectAnimal" class="form-label">Selecione um Animal</label>
                    <select class="form-select" id="selectAnimal" required>
                        <option value="">Escolher Animal</option>
                        <!-- Animais serão carregados via JavaScript -->
                    </select>
                </div>

                <div class="mb-3">
                    <label for="dataConsulta" class="form-label">Selecione uma Data</label>
                    <input type="date" class="form-control" id="dataConsulta" required>
                </div>

                <div class="mb-3">
                    <label for="horario" class="form-label">Selecione um Horário</label>
                    <select class="form-select" id="horario" required>
                        <option value="">Escolher Horário</option>
                        <option value="09:00">09:00</option>
                        <option value="10:00">10:00</option>
                        <option value="11:00">11:00</option>
                        <option value="13:00">13:00</option>
                        <option value="14:00">14:00</option>
                        <option value="15:00">15:00</option>
                        <option value="16:00">16:00</option>
                    </select>
                </div>

                <div class="d-grid gap-2">
                    <button class="btn btn-primary" type="submit">
                        Confirmar
                        <span class="loading-spinner"></span>
                    </button>
                </div>
            </form>
            <div class="container mt-5">
                <h3>Meus Agendamentos</h3>
                <div id="listaAgendamentos" class="row">
                    <!-- Os agendamentos serão inseridos aqui via JavaScript -->
                </div>
            </div>
        </div>
    </main>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('formAgendamento');
            const selectAnimal = document.getElementById('selectAnimal');
            const alertSuccess = document.getElementById('alertSuccess');
            const alertError = document.getElementById('alertError');
            const dataConsulta = document.getElementById('dataConsulta');
            
            // Definir data mínima como hoje
            const hoje = new Date().toISOString().split('T')[0];
            dataConsulta.min = hoje;

            // Carregar animais do usuário
            async function carregarAnimais() {
                try {
                    const response = await fetch('/user/animais');
                    if (!response.ok) throw new Error('Erro ao carregar animais');
                    
                    const animais = await response.json();
                    selectAnimal.innerHTML = '<option value="">Escolher Animal</option>';
                    
                    animais.forEach(animal => {
                        const option = document.createElement('option');
                        option.value = animal._id;
                        option.textContent = `${animal.nome} - ${animal.raca}`;
                        selectAnimal.appendChild(option);
                    });
                } catch (error) {
                    mostrarErro('Erro ao carregar seus animais. Por favor, recarregue a página.');
                }
            }

            function mostrarSucesso(mensagem) {
                alertSuccess.textContent = mensagem;
                alertSuccess.style.display = 'block';
                alertError.style.display = 'none';
                setTimeout(() => alertSuccess.style.display = 'none', 5000);
            }

            function mostrarErro(mensagem) {
                alertError.textContent = mensagem;
                alertError.style.display = 'block';
                alertSuccess.style.display = 'none';
                setTimeout(() => alertError.style.display = 'none', 5000);
            }

            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const especialidade = document.getElementById('especialidade').value;
                const animalId = selectAnimal.value;
                const data = dataConsulta.value;
                const horario = document.getElementById('horario').value;

                if (!especialidade || !animalId || !data || !horario) {
                    mostrarErro('Por favor, preencha todos os campos');
                    return;
                }

                // Validar data
                const dataAgendamento = new Date(`${data}T${horario}`);
                if (dataAgendamento < new Date()) {
                    mostrarErro('Selecione uma data e horário futuros');
                    return;
                }

                // Desabilitar form durante o envio
                form.classList.add('form-loading');
                document.querySelector('.loading-spinner').style.display = 'inline-block';

                try {
                    const response = await fetch('/agendamentos/agendar', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            nomeAnimal: animalId,
                            dataAgendamento: dataAgendamento.toISOString(),
                            especialidade,
                        })
                    });

                    const data = await response.json();
                    
                    if (response.ok) {
                        mostrarSucesso('Consulta agendada com sucesso!');
                        form.reset();
                    } else {
                        mostrarErro(data.message || 'Erro ao agendar consulta');
                    }
                } catch (error) {
                    mostrarErro('Erro ao processar agendamento. Tente novamente.');
                } finally {
                    form.classList.remove('form-loading');
                    document.querySelector('.loading-spinner').style.display = 'none';
                }
            });

            // Carregar animais ao iniciar
            carregarAnimais();
        });
    </script>   
    <script>
        async function carregarAgendamentos() {
            try {
                const response = await fetch('/agendamentos/meus-agendamentos');
                if (!response.ok) throw new Error('Erro ao carregar agendamentos');
                
                const agendamentos = await response.json();
                const container = document.getElementById('listaAgendamentos');
                container.innerHTML = '';
                
                if (agendamentos.length === 0) {
                    container.innerHTML = '<div class="col-12"><p>Você não possui agendamentos.</p></div>';
                    return;
                }
    
                agendamentos.forEach(agendamento => {
                    const data = new Date(agendamento.dataAgendamento).toLocaleDateString();
                    const hora = new Date(agendamento.dataAgendamento).toLocaleTimeString().slice(0, 5);
                    
                    const card = document.createElement('div');
                    card.className = `col-md-6 mb-3`;
                    card.innerHTML = `
                        <div class="agendamento-card ${agendamento.status}">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h5 class="mb-0">Consulta com ${agendamento.nomeMedico}</h5>
                                <span class="status-badge status-${agendamento.status}">${agendamento.status}</span>
                            </div>
                            <p class="mb-2">Animal: ${agendamento.nomeAnimal.nome}</p>
                            <p class="mb-2">Data: ${data} às ${hora}</p>
                            ${agendamento.status === 'agendado' ? `
                                <button onclick="cancelarAgendamento('${agendamento._id}')" 
                                        class="btn btn-danger btn-sm">
                                    Cancelar Agendamento
                                </button>
                            ` : ''}
                        </div>
                    `;
                    container.appendChild(card);
                });
            } catch (error) {
                console.error('Erro ao carregar agendamentos:', error);
                mostrarErro('Erro ao carregar agendamentos. Por favor, recarregue a página.');
            }
        }
    
        async function cancelarAgendamento(id) {
            if (!confirm('Tem certeza que deseja cancelar este agendamento?')) return;
            
            try {
                const response = await fetch(`/agendamentos/cancelar/${id}`, {
                    method: 'DELETE',
                });
                
                if (!response.ok) throw new Error('Erro ao cancelar agendamento');
                
                mostrarSucesso('Agendamento cancelado com sucesso!');
                carregarAgendamentos(); // Recarrega a lista
            } catch (error) {
                console.error('Erro ao cancelar agendamento:', error);
                mostrarErro('Erro ao cancelar agendamento. Tente novamente.');
            }
        }
    
        // Adicione esta linha ao seu DOMContentLoaded
        document.addEventListener('DOMContentLoaded', function() {
            // ... seu código existente ...
            carregarAgendamentos(); // Carregar agendamentos ao iniciar a página
        });
    </script>     
</body>
</html>